/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.ace.jooq.generated.tables.records;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.trustdeck.ace.jooq.generated.tables.Pseudonym;
import org.trustdeck.ace.jooq.generated.tables.interfaces.IPseudonym;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "pseudonym",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "pseudonym_identifier_idtype_domainid_pseudonym_key", columnNames = { "identifier", "idtype", "domainid", "pseudonym" }),
        @UniqueConstraint(name = "pseudonym_psn_domainid_key", columnNames = { "domainid", "pseudonym" })
    },
    indexes = {
        @Index(name = "ididtypeidx", columnList = "identifier ASC, idtype ASC"),
        @Index(name = "idpsnidx", unique = true, columnList = "identifier ASC, pseudonym ASC")
    }
)
public class PseudonymRecord extends UpdatableRecordImpl<PseudonymRecord> implements Record9<Long, String, String, String, LocalDateTime, Boolean, LocalDateTime, Boolean, Integer>, IPseudonym {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.pseudonym.id</code>.
     */
    @Override
    public PseudonymRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pseudonym.identifier</code>.
     */
    @Override
    public PseudonymRecord setIdentifier(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.identifier</code>.
     */
    @Column(name = "identifier", nullable = false)
    @NotNull
    @Override
    public String getIdentifier() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.pseudonym.idtype</code>.
     */
    @Override
    public PseudonymRecord setIdtype(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.idtype</code>.
     */
    @Column(name = "idtype", nullable = false)
    @NotNull
    @Override
    public String getIdtype() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.pseudonym.pseudonym</code>.
     */
    @Override
    public PseudonymRecord setPseudonym(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.pseudonym</code>.
     */
    @Column(name = "pseudonym", nullable = false)
    @NotNull
    @Override
    public String getPseudonym() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.pseudonym.validfrom</code>.
     */
    @Override
    public PseudonymRecord setValidfrom(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.validfrom</code>.
     */
    @Column(name = "validfrom", nullable = false, precision = 6)
    @NotNull
    @Override
    public LocalDateTime getValidfrom() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.pseudonym.validfrominherited</code>.
     */
    @Override
    public PseudonymRecord setValidfrominherited(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.validfrominherited</code>.
     */
    @Column(name = "validfrominherited", nullable = false)
    @NotNull
    @Override
    public Boolean getValidfrominherited() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.pseudonym.validto</code>.
     */
    @Override
    public PseudonymRecord setValidto(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.validto</code>.
     */
    @Column(name = "validto", nullable = false, precision = 6)
    @NotNull
    @Override
    public LocalDateTime getValidto() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.pseudonym.validtoinherited</code>.
     */
    @Override
    public PseudonymRecord setValidtoinherited(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.validtoinherited</code>.
     */
    @Column(name = "validtoinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getValidtoinherited() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.pseudonym.domainid</code>.
     */
    @Override
    public PseudonymRecord setDomainid(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.domainid</code>.
     */
    @Column(name = "domainid")
    @Override
    public Integer getDomainid() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, LocalDateTime, Boolean, LocalDateTime, Boolean, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, String, LocalDateTime, Boolean, LocalDateTime, Boolean, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Pseudonym.PSEUDONYM.ID;
    }

    @Override
    public Field<String> field2() {
        return Pseudonym.PSEUDONYM.IDENTIFIER;
    }

    @Override
    public Field<String> field3() {
        return Pseudonym.PSEUDONYM.IDTYPE;
    }

    @Override
    public Field<String> field4() {
        return Pseudonym.PSEUDONYM.PSEUDONYM_;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Pseudonym.PSEUDONYM.VALIDFROM;
    }

    @Override
    public Field<Boolean> field6() {
        return Pseudonym.PSEUDONYM.VALIDFROMINHERITED;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Pseudonym.PSEUDONYM.VALIDTO;
    }

    @Override
    public Field<Boolean> field8() {
        return Pseudonym.PSEUDONYM.VALIDTOINHERITED;
    }

    @Override
    public Field<Integer> field9() {
        return Pseudonym.PSEUDONYM.DOMAINID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getIdentifier();
    }

    @Override
    public String component3() {
        return getIdtype();
    }

    @Override
    public String component4() {
        return getPseudonym();
    }

    @Override
    public LocalDateTime component5() {
        return getValidfrom();
    }

    @Override
    public Boolean component6() {
        return getValidfrominherited();
    }

    @Override
    public LocalDateTime component7() {
        return getValidto();
    }

    @Override
    public Boolean component8() {
        return getValidtoinherited();
    }

    @Override
    public Integer component9() {
        return getDomainid();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getIdentifier();
    }

    @Override
    public String value3() {
        return getIdtype();
    }

    @Override
    public String value4() {
        return getPseudonym();
    }

    @Override
    public LocalDateTime value5() {
        return getValidfrom();
    }

    @Override
    public Boolean value6() {
        return getValidfrominherited();
    }

    @Override
    public LocalDateTime value7() {
        return getValidto();
    }

    @Override
    public Boolean value8() {
        return getValidtoinherited();
    }

    @Override
    public Integer value9() {
        return getDomainid();
    }

    @Override
    public PseudonymRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PseudonymRecord value2(String value) {
        setIdentifier(value);
        return this;
    }

    @Override
    public PseudonymRecord value3(String value) {
        setIdtype(value);
        return this;
    }

    @Override
    public PseudonymRecord value4(String value) {
        setPseudonym(value);
        return this;
    }

    @Override
    public PseudonymRecord value5(LocalDateTime value) {
        setValidfrom(value);
        return this;
    }

    @Override
    public PseudonymRecord value6(Boolean value) {
        setValidfrominherited(value);
        return this;
    }

    @Override
    public PseudonymRecord value7(LocalDateTime value) {
        setValidto(value);
        return this;
    }

    @Override
    public PseudonymRecord value8(Boolean value) {
        setValidtoinherited(value);
        return this;
    }

    @Override
    public PseudonymRecord value9(Integer value) {
        setDomainid(value);
        return this;
    }

    @Override
    public PseudonymRecord values(Long value1, String value2, String value3, String value4, LocalDateTime value5, Boolean value6, LocalDateTime value7, Boolean value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPseudonym from) {
        setId(from.getId());
        setIdentifier(from.getIdentifier());
        setIdtype(from.getIdtype());
        setPseudonym(from.getPseudonym());
        setValidfrom(from.getValidfrom());
        setValidfrominherited(from.getValidfrominherited());
        setValidto(from.getValidto());
        setValidtoinherited(from.getValidtoinherited());
        setDomainid(from.getDomainid());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IPseudonym> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PseudonymRecord
     */
    public PseudonymRecord() {
        super(Pseudonym.PSEUDONYM);
    }

    /**
     * Create a detached, initialised PseudonymRecord
     */
    public PseudonymRecord(Long id, String identifier, String idtype, String pseudonym, LocalDateTime validfrom, Boolean validfrominherited, LocalDateTime validto, Boolean validtoinherited, Integer domainid) {
        super(Pseudonym.PSEUDONYM);

        setId(id);
        setIdentifier(identifier);
        setIdtype(idtype);
        setPseudonym(pseudonym);
        setValidfrom(validfrom);
        setValidfrominherited(validfrominherited);
        setValidto(validto);
        setValidtoinherited(validtoinherited);
        setDomainid(domainid);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PseudonymRecord
     */
    public PseudonymRecord(org.trustdeck.ace.jooq.generated.tables.pojos.Pseudonym value) {
        super(Pseudonym.PSEUDONYM);

        if (value != null) {
            setId(value.getId());
            setIdentifier(value.getIdentifier());
            setIdtype(value.getIdtype());
            setPseudonym(value.getPseudonym());
            setValidfrom(value.getValidfrom());
            setValidfrominherited(value.getValidfrominherited());
            setValidto(value.getValidto());
            setValidtoinherited(value.getValidtoinherited());
            setDomainid(value.getDomainid());
            resetChangedOnNotNull();
        }
    }
}
