/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.ace.jooq.generated.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.time.LocalDateTime;

import org.trustdeck.ace.jooq.generated.tables.interfaces.IAuditevent;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "auditevent",
    schema = "public",
    indexes = {
        @Index(name = "auditusernameidx", columnList = "username ASC")
    }
)
public class Auditevent implements IAuditevent {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime requesttime;
    private String username;
    private String requesterip;
    private String requesturl;
    private String requestbody;

    public Auditevent() {}

    public Auditevent(IAuditevent value) {
        this.id = value.getId();
        this.requesttime = value.getRequesttime();
        this.username = value.getUsername();
        this.requesterip = value.getRequesterip();
        this.requesturl = value.getRequesturl();
        this.requestbody = value.getRequestbody();
    }

    public Auditevent(
        Long id,
        LocalDateTime requesttime,
        String username,
        String requesterip,
        String requesturl,
        String requestbody
    ) {
        this.id = id;
        this.requesttime = requesttime;
        this.username = username;
        this.requesterip = requesterip;
        this.requesturl = requesturl;
        this.requestbody = requestbody;
    }

    /**
     * Getter for <code>public.auditevent.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.auditevent.id</code>.
     */
    @Override
    public Auditevent setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.auditevent.requesttime</code>.
     */
    @Column(name = "requesttime", nullable = false, precision = 6)
    @NotNull
    @Override
    public LocalDateTime getRequesttime() {
        return this.requesttime;
    }

    /**
     * Setter for <code>public.auditevent.requesttime</code>.
     */
    @Override
    public Auditevent setRequesttime(LocalDateTime requesttime) {
        this.requesttime = requesttime;
        return this;
    }

    /**
     * Getter for <code>public.auditevent.username</code>.
     */
    @Column(name = "username", nullable = false)
    @NotNull
    @Override
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>public.auditevent.username</code>.
     */
    @Override
    public Auditevent setUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Getter for <code>public.auditevent.requesterip</code>.
     */
    @Column(name = "requesterip", nullable = false)
    @NotNull
    @Override
    public String getRequesterip() {
        return this.requesterip;
    }

    /**
     * Setter for <code>public.auditevent.requesterip</code>.
     */
    @Override
    public Auditevent setRequesterip(String requesterip) {
        this.requesterip = requesterip;
        return this;
    }

    /**
     * Getter for <code>public.auditevent.requesturl</code>.
     */
    @Column(name = "requesturl", nullable = false)
    @NotNull
    @Override
    public String getRequesturl() {
        return this.requesturl;
    }

    /**
     * Setter for <code>public.auditevent.requesturl</code>.
     */
    @Override
    public Auditevent setRequesturl(String requesturl) {
        this.requesturl = requesturl;
        return this;
    }

    /**
     * Getter for <code>public.auditevent.requestbody</code>.
     */
    @Column(name = "requestbody")
    @Override
    public String getRequestbody() {
        return this.requestbody;
    }

    /**
     * Setter for <code>public.auditevent.requestbody</code>.
     */
    @Override
    public Auditevent setRequestbody(String requestbody) {
        this.requestbody = requestbody;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Auditevent other = (Auditevent) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.requesttime == null) {
            if (other.requesttime != null)
                return false;
        }
        else if (!this.requesttime.equals(other.requesttime))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.requesterip == null) {
            if (other.requesterip != null)
                return false;
        }
        else if (!this.requesterip.equals(other.requesterip))
            return false;
        if (this.requesturl == null) {
            if (other.requesturl != null)
                return false;
        }
        else if (!this.requesturl.equals(other.requesturl))
            return false;
        if (this.requestbody == null) {
            if (other.requestbody != null)
                return false;
        }
        else if (!this.requestbody.equals(other.requestbody))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.requesttime == null) ? 0 : this.requesttime.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.requesterip == null) ? 0 : this.requesterip.hashCode());
        result = prime * result + ((this.requesturl == null) ? 0 : this.requesturl.hashCode());
        result = prime * result + ((this.requestbody == null) ? 0 : this.requestbody.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Auditevent (");

        sb.append(id);
        sb.append(", ").append(requesttime);
        sb.append(", ").append(username);
        sb.append(", ").append(requesterip);
        sb.append(", ").append(requesturl);
        sb.append(", ").append(requestbody);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IAuditevent from) {
        setId(from.getId());
        setRequesttime(from.getRequesttime());
        setUsername(from.getUsername());
        setRequesterip(from.getRequesterip());
        setRequesturl(from.getRequesturl());
        setRequestbody(from.getRequestbody());
    }

    @Override
    public <E extends IAuditevent> E into(E into) {
        into.from(this);
        return into;
    }
}
