/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.ace.jooq.generated.tables.interfaces;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "pseudonym",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "pseudonym_identifier_idtype_domainid_pseudonym_key", columnNames = { "identifier", "idtype", "domainid", "pseudonym" }),
        @UniqueConstraint(name = "pseudonym_psn_domainid_key", columnNames = { "domainid", "pseudonym" })
    },
    indexes = {
        @Index(name = "ididtypeidx", columnList = "identifier ASC, idtype ASC"),
        @Index(name = "idpsnidx", unique = true, columnList = "identifier ASC, pseudonym ASC")
    }
)
public interface IPseudonym extends Serializable {

    /**
     * Setter for <code>public.pseudonym.id</code>.
     */
    public IPseudonym setId(Long value);

    /**
     * Getter for <code>public.pseudonym.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    public Long getId();

    /**
     * Setter for <code>public.pseudonym.identifier</code>.
     */
    public IPseudonym setIdentifier(String value);

    /**
     * Getter for <code>public.pseudonym.identifier</code>.
     */
    @Column(name = "identifier", nullable = false)
    @NotNull
    public String getIdentifier();

    /**
     * Setter for <code>public.pseudonym.idtype</code>.
     */
    public IPseudonym setIdtype(String value);

    /**
     * Getter for <code>public.pseudonym.idtype</code>.
     */
    @Column(name = "idtype", nullable = false)
    @NotNull
    public String getIdtype();

    /**
     * Setter for <code>public.pseudonym.pseudonym</code>.
     */
    public IPseudonym setPseudonym(String value);

    /**
     * Getter for <code>public.pseudonym.pseudonym</code>.
     */
    @Column(name = "pseudonym", nullable = false)
    @NotNull
    public String getPseudonym();

    /**
     * Setter for <code>public.pseudonym.validfrom</code>.
     */
    public IPseudonym setValidfrom(LocalDateTime value);

    /**
     * Getter for <code>public.pseudonym.validfrom</code>.
     */
    @Column(name = "validfrom", nullable = false, precision = 6)
    @NotNull
    public LocalDateTime getValidfrom();

    /**
     * Setter for <code>public.pseudonym.validfrominherited</code>.
     */
    public IPseudonym setValidfrominherited(Boolean value);

    /**
     * Getter for <code>public.pseudonym.validfrominherited</code>.
     */
    @Column(name = "validfrominherited", nullable = false)
    @NotNull
    public Boolean getValidfrominherited();

    /**
     * Setter for <code>public.pseudonym.validto</code>.
     */
    public IPseudonym setValidto(LocalDateTime value);

    /**
     * Getter for <code>public.pseudonym.validto</code>.
     */
    @Column(name = "validto", nullable = false, precision = 6)
    @NotNull
    public LocalDateTime getValidto();

    /**
     * Setter for <code>public.pseudonym.validtoinherited</code>.
     */
    public IPseudonym setValidtoinherited(Boolean value);

    /**
     * Getter for <code>public.pseudonym.validtoinherited</code>.
     */
    @Column(name = "validtoinherited", nullable = false)
    @NotNull
    public Boolean getValidtoinherited();

    /**
     * Setter for <code>public.pseudonym.domainid</code>.
     */
    public IPseudonym setDomainid(Integer value);

    /**
     * Getter for <code>public.pseudonym.domainid</code>.
     */
    @Column(name = "domainid")
    public Integer getDomainid();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IPseudonym
     */
    public void from(IPseudonym from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IPseudonym
     */
    public <E extends IPseudonym> E into(E into);
}
