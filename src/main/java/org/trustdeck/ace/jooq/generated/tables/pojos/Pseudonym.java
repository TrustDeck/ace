/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.ace.jooq.generated.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;

import java.time.LocalDateTime;

import org.trustdeck.ace.jooq.generated.tables.interfaces.IPseudonym;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "pseudonym",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "pseudonym_identifier_idtype_domainid_pseudonym_key", columnNames = { "identifier", "idtype", "domainid", "pseudonym" }),
        @UniqueConstraint(name = "pseudonym_psn_domainid_key", columnNames = { "domainid", "pseudonym" })
    },
    indexes = {
        @Index(name = "ididtypeidx", columnList = "identifier ASC, idtype ASC"),
        @Index(name = "idpsnidx", unique = true, columnList = "identifier ASC, pseudonym ASC")
    }
)
public class Pseudonym implements IPseudonym {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String identifier;
    private String idtype;
    private String pseudonym;
    private LocalDateTime validfrom;
    private Boolean validfrominherited;
    private LocalDateTime validto;
    private Boolean validtoinherited;
    private Integer domainid;

    public Pseudonym() {}

    public Pseudonym(IPseudonym value) {
        this.id = value.getId();
        this.identifier = value.getIdentifier();
        this.idtype = value.getIdtype();
        this.pseudonym = value.getPseudonym();
        this.validfrom = value.getValidfrom();
        this.validfrominherited = value.getValidfrominherited();
        this.validto = value.getValidto();
        this.validtoinherited = value.getValidtoinherited();
        this.domainid = value.getDomainid();
    }

    public Pseudonym(
        Long id,
        String identifier,
        String idtype,
        String pseudonym,
        LocalDateTime validfrom,
        Boolean validfrominherited,
        LocalDateTime validto,
        Boolean validtoinherited,
        Integer domainid
    ) {
        this.id = id;
        this.identifier = identifier;
        this.idtype = idtype;
        this.pseudonym = pseudonym;
        this.validfrom = validfrom;
        this.validfrominherited = validfrominherited;
        this.validto = validto;
        this.validtoinherited = validtoinherited;
        this.domainid = domainid;
    }

    /**
     * Getter for <code>public.pseudonym.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.pseudonym.id</code>.
     */
    @Override
    public Pseudonym setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.identifier</code>.
     */
    @Column(name = "identifier", nullable = false)
    @NotNull
    @Override
    public String getIdentifier() {
        return this.identifier;
    }

    /**
     * Setter for <code>public.pseudonym.identifier</code>.
     */
    @Override
    public Pseudonym setIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.idtype</code>.
     */
    @Column(name = "idtype", nullable = false)
    @NotNull
    @Override
    public String getIdtype() {
        return this.idtype;
    }

    /**
     * Setter for <code>public.pseudonym.idtype</code>.
     */
    @Override
    public Pseudonym setIdtype(String idtype) {
        this.idtype = idtype;
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.pseudonym</code>.
     */
    @Column(name = "pseudonym", nullable = false)
    @NotNull
    @Override
    public String getPseudonym() {
        return this.pseudonym;
    }

    /**
     * Setter for <code>public.pseudonym.pseudonym</code>.
     */
    @Override
    public Pseudonym setPseudonym(String pseudonym) {
        this.pseudonym = pseudonym;
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.validfrom</code>.
     */
    @Column(name = "validfrom", nullable = false, precision = 6)
    @NotNull
    @Override
    public LocalDateTime getValidfrom() {
        return this.validfrom;
    }

    /**
     * Setter for <code>public.pseudonym.validfrom</code>.
     */
    @Override
    public Pseudonym setValidfrom(LocalDateTime validfrom) {
        this.validfrom = validfrom;
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.validfrominherited</code>.
     */
    @Column(name = "validfrominherited", nullable = false)
    @NotNull
    @Override
    public Boolean getValidfrominherited() {
        return this.validfrominherited;
    }

    /**
     * Setter for <code>public.pseudonym.validfrominherited</code>.
     */
    @Override
    public Pseudonym setValidfrominherited(Boolean validfrominherited) {
        this.validfrominherited = validfrominherited;
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.validto</code>.
     */
    @Column(name = "validto", nullable = false, precision = 6)
    @NotNull
    @Override
    public LocalDateTime getValidto() {
        return this.validto;
    }

    /**
     * Setter for <code>public.pseudonym.validto</code>.
     */
    @Override
    public Pseudonym setValidto(LocalDateTime validto) {
        this.validto = validto;
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.validtoinherited</code>.
     */
    @Column(name = "validtoinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getValidtoinherited() {
        return this.validtoinherited;
    }

    /**
     * Setter for <code>public.pseudonym.validtoinherited</code>.
     */
    @Override
    public Pseudonym setValidtoinherited(Boolean validtoinherited) {
        this.validtoinherited = validtoinherited;
        return this;
    }

    /**
     * Getter for <code>public.pseudonym.domainid</code>.
     */
    @Column(name = "domainid")
    @Override
    public Integer getDomainid() {
        return this.domainid;
    }

    /**
     * Setter for <code>public.pseudonym.domainid</code>.
     */
    @Override
    public Pseudonym setDomainid(Integer domainid) {
        this.domainid = domainid;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Pseudonym other = (Pseudonym) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.identifier == null) {
            if (other.identifier != null)
                return false;
        }
        else if (!this.identifier.equals(other.identifier))
            return false;
        if (this.idtype == null) {
            if (other.idtype != null)
                return false;
        }
        else if (!this.idtype.equals(other.idtype))
            return false;
        if (this.pseudonym == null) {
            if (other.pseudonym != null)
                return false;
        }
        else if (!this.pseudonym.equals(other.pseudonym))
            return false;
        if (this.validfrom == null) {
            if (other.validfrom != null)
                return false;
        }
        else if (!this.validfrom.equals(other.validfrom))
            return false;
        if (this.validfrominherited == null) {
            if (other.validfrominherited != null)
                return false;
        }
        else if (!this.validfrominherited.equals(other.validfrominherited))
            return false;
        if (this.validto == null) {
            if (other.validto != null)
                return false;
        }
        else if (!this.validto.equals(other.validto))
            return false;
        if (this.validtoinherited == null) {
            if (other.validtoinherited != null)
                return false;
        }
        else if (!this.validtoinherited.equals(other.validtoinherited))
            return false;
        if (this.domainid == null) {
            if (other.domainid != null)
                return false;
        }
        else if (!this.domainid.equals(other.domainid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.identifier == null) ? 0 : this.identifier.hashCode());
        result = prime * result + ((this.idtype == null) ? 0 : this.idtype.hashCode());
        result = prime * result + ((this.pseudonym == null) ? 0 : this.pseudonym.hashCode());
        result = prime * result + ((this.validfrom == null) ? 0 : this.validfrom.hashCode());
        result = prime * result + ((this.validfrominherited == null) ? 0 : this.validfrominherited.hashCode());
        result = prime * result + ((this.validto == null) ? 0 : this.validto.hashCode());
        result = prime * result + ((this.validtoinherited == null) ? 0 : this.validtoinherited.hashCode());
        result = prime * result + ((this.domainid == null) ? 0 : this.domainid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Pseudonym (");

        sb.append(id);
        sb.append(", ").append(identifier);
        sb.append(", ").append(idtype);
        sb.append(", ").append(pseudonym);
        sb.append(", ").append(validfrom);
        sb.append(", ").append(validfrominherited);
        sb.append(", ").append(validto);
        sb.append(", ").append(validtoinherited);
        sb.append(", ").append(domainid);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPseudonym from) {
        setId(from.getId());
        setIdentifier(from.getIdentifier());
        setIdtype(from.getIdtype());
        setPseudonym(from.getPseudonym());
        setValidfrom(from.getValidfrom());
        setValidfrominherited(from.getValidfrominherited());
        setValidto(from.getValidto());
        setValidtoinherited(from.getValidtoinherited());
        setDomainid(from.getDomainid());
    }

    @Override
    public <E extends IPseudonym> E into(E into) {
        into.from(this);
        return into;
    }
}
