/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.jooq.generated.tables.interfaces;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "domain",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "domain_name_key", columnNames = { "name" })
    },
    indexes = {
        @Index(name = "metadataidx", unique = true, columnList = "name ASC")
    }
)
public interface IDomain extends Serializable {

    /**
     * Setter for <code>public.domain.id</code>.
     */
    public IDomain setId(Integer value);

    /**
     * Getter for <code>public.domain.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    public Integer getId();

    /**
     * Setter for <code>public.domain.name</code>.
     */
    public IDomain setName(String value);

    /**
     * Getter for <code>public.domain.name</code>.
     */
    @Column(name = "name", nullable = false)
    @NotNull
    public String getName();

    /**
     * Setter for <code>public.domain.prefix</code>.
     */
    public IDomain setPrefix(String value);

    /**
     * Getter for <code>public.domain.prefix</code>.
     */
    @Column(name = "prefix", nullable = false)
    @NotNull
    public String getPrefix();

    /**
     * Setter for <code>public.domain.validfrom</code>.
     */
    public IDomain setValidfrom(LocalDateTime value);

    /**
     * Getter for <code>public.domain.validfrom</code>.
     */
    @Column(name = "validfrom", nullable = false, precision = 6)
    @NotNull
    public LocalDateTime getValidfrom();

    /**
     * Setter for <code>public.domain.validfrominherited</code>.
     */
    public IDomain setValidfrominherited(Boolean value);

    /**
     * Getter for <code>public.domain.validfrominherited</code>.
     */
    @Column(name = "validfrominherited", nullable = false)
    @NotNull
    public Boolean getValidfrominherited();

    /**
     * Setter for <code>public.domain.validto</code>.
     */
    public IDomain setValidto(LocalDateTime value);

    /**
     * Getter for <code>public.domain.validto</code>.
     */
    @Column(name = "validto", nullable = false, precision = 6)
    @NotNull
    public LocalDateTime getValidto();

    /**
     * Setter for <code>public.domain.validtoinherited</code>.
     */
    public IDomain setValidtoinherited(Boolean value);

    /**
     * Getter for <code>public.domain.validtoinherited</code>.
     */
    @Column(name = "validtoinherited", nullable = false)
    @NotNull
    public Boolean getValidtoinherited();

    /**
     * Setter for <code>public.domain.enforcestartdatevalidity</code>.
     */
    public IDomain setEnforcestartdatevalidity(Boolean value);

    /**
     * Getter for <code>public.domain.enforcestartdatevalidity</code>.
     */
    @Column(name = "enforcestartdatevalidity", nullable = false)
    @NotNull
    public Boolean getEnforcestartdatevalidity();

    /**
     * Setter for <code>public.domain.enforcestartdatevalidityinherited</code>.
     */
    public IDomain setEnforcestartdatevalidityinherited(Boolean value);

    /**
     * Getter for <code>public.domain.enforcestartdatevalidityinherited</code>.
     */
    @Column(name = "enforcestartdatevalidityinherited", nullable = false)
    @NotNull
    public Boolean getEnforcestartdatevalidityinherited();

    /**
     * Setter for <code>public.domain.enforceenddatevalidity</code>.
     */
    public IDomain setEnforceenddatevalidity(Boolean value);

    /**
     * Getter for <code>public.domain.enforceenddatevalidity</code>.
     */
    @Column(name = "enforceenddatevalidity", nullable = false)
    @NotNull
    public Boolean getEnforceenddatevalidity();

    /**
     * Setter for <code>public.domain.enforceenddatevalidityinherited</code>.
     */
    public IDomain setEnforceenddatevalidityinherited(Boolean value);

    /**
     * Getter for <code>public.domain.enforceenddatevalidityinherited</code>.
     */
    @Column(name = "enforceenddatevalidityinherited", nullable = false)
    @NotNull
    public Boolean getEnforceenddatevalidityinherited();

    /**
     * Setter for <code>public.domain.algorithm</code>.
     */
    public IDomain setAlgorithm(String value);

    /**
     * Getter for <code>public.domain.algorithm</code>.
     */
    @Column(name = "algorithm", nullable = false)
    @NotNull
    public String getAlgorithm();

    /**
     * Setter for <code>public.domain.algorithminherited</code>.
     */
    public IDomain setAlgorithminherited(Boolean value);

    /**
     * Getter for <code>public.domain.algorithminherited</code>.
     */
    @Column(name = "algorithminherited", nullable = false)
    @NotNull
    public Boolean getAlgorithminherited();

    /**
     * Setter for <code>public.domain.alphabet</code>.
     */
    public IDomain setAlphabet(String value);

    /**
     * Getter for <code>public.domain.alphabet</code>.
     */
    @Column(name = "alphabet", nullable = false)
    @NotNull
    public String getAlphabet();

    /**
     * Setter for <code>public.domain.alphabetinherited</code>.
     */
    public IDomain setAlphabetinherited(Boolean value);

    /**
     * Getter for <code>public.domain.alphabetinherited</code>.
     */
    @Column(name = "alphabetinherited", nullable = false)
    @NotNull
    public Boolean getAlphabetinherited();

    /**
     * Setter for <code>public.domain.randomalgorithmdesiredsize</code>.
     */
    public IDomain setRandomalgorithmdesiredsize(Long value);

    /**
     * Getter for <code>public.domain.randomalgorithmdesiredsize</code>.
     */
    @Column(name = "randomalgorithmdesiredsize", nullable = false)
    @NotNull
    public Long getRandomalgorithmdesiredsize();

    /**
     * Setter for
     * <code>public.domain.randomalgorithmdesiredsizeinherited</code>.
     */
    public IDomain setRandomalgorithmdesiredsizeinherited(Boolean value);

    /**
     * Getter for
     * <code>public.domain.randomalgorithmdesiredsizeinherited</code>.
     */
    @Column(name = "randomalgorithmdesiredsizeinherited", nullable = false)
    @NotNull
    public Boolean getRandomalgorithmdesiredsizeinherited();

    /**
     * Setter for
     * <code>public.domain.randomalgorithmdesiredsuccessprobability</code>.
     */
    public IDomain setRandomalgorithmdesiredsuccessprobability(Double value);

    /**
     * Getter for
     * <code>public.domain.randomalgorithmdesiredsuccessprobability</code>.
     */
    @Column(name = "randomalgorithmdesiredsuccessprobability", nullable = false)
    @NotNull
    public Double getRandomalgorithmdesiredsuccessprobability();

    /**
     * Setter for
     * <code>public.domain.randomalgorithmdesiredsuccessprobabilityinherited</code>.
     */
    public IDomain setRandomalgorithmdesiredsuccessprobabilityinherited(Boolean value);

    /**
     * Getter for
     * <code>public.domain.randomalgorithmdesiredsuccessprobabilityinherited</code>.
     */
    @Column(name = "randomalgorithmdesiredsuccessprobabilityinherited", nullable = false)
    @NotNull
    public Boolean getRandomalgorithmdesiredsuccessprobabilityinherited();

    /**
     * Setter for <code>public.domain.multiplepsnallowed</code>.
     */
    public IDomain setMultiplepsnallowed(Boolean value);

    /**
     * Getter for <code>public.domain.multiplepsnallowed</code>.
     */
    @Column(name = "multiplepsnallowed", nullable = false)
    @NotNull
    public Boolean getMultiplepsnallowed();

    /**
     * Setter for <code>public.domain.multiplepsnallowedinherited</code>.
     */
    public IDomain setMultiplepsnallowedinherited(Boolean value);

    /**
     * Getter for <code>public.domain.multiplepsnallowedinherited</code>.
     */
    @Column(name = "multiplepsnallowedinherited", nullable = false)
    @NotNull
    public Boolean getMultiplepsnallowedinherited();

    /**
     * Setter for <code>public.domain.consecutivevaluecounter</code>.
     */
    public IDomain setConsecutivevaluecounter(Long value);

    /**
     * Getter for <code>public.domain.consecutivevaluecounter</code>.
     */
    @Column(name = "consecutivevaluecounter", nullable = false)
    @NotNull
    public Long getConsecutivevaluecounter();

    /**
     * Setter for <code>public.domain.pseudonymlength</code>.
     */
    public IDomain setPseudonymlength(Integer value);

    /**
     * Getter for <code>public.domain.pseudonymlength</code>.
     */
    @Column(name = "pseudonymlength", nullable = false)
    @NotNull
    public Integer getPseudonymlength();

    /**
     * Setter for <code>public.domain.pseudonymlengthinherited</code>.
     */
    public IDomain setPseudonymlengthinherited(Boolean value);

    /**
     * Getter for <code>public.domain.pseudonymlengthinherited</code>.
     */
    @Column(name = "pseudonymlengthinherited", nullable = false)
    @NotNull
    public Boolean getPseudonymlengthinherited();

    /**
     * Setter for <code>public.domain.paddingcharacter</code>.
     */
    public IDomain setPaddingcharacter(String value);

    /**
     * Getter for <code>public.domain.paddingcharacter</code>.
     */
    @Column(name = "paddingcharacter", nullable = false, length = 1)
    @NotNull
    @Size(max = 1)
    public String getPaddingcharacter();

    /**
     * Setter for <code>public.domain.paddingcharacterinherited</code>.
     */
    public IDomain setPaddingcharacterinherited(Boolean value);

    /**
     * Getter for <code>public.domain.paddingcharacterinherited</code>.
     */
    @Column(name = "paddingcharacterinherited", nullable = false)
    @NotNull
    public Boolean getPaddingcharacterinherited();

    /**
     * Setter for <code>public.domain.addcheckdigit</code>.
     */
    public IDomain setAddcheckdigit(Boolean value);

    /**
     * Getter for <code>public.domain.addcheckdigit</code>.
     */
    @Column(name = "addcheckdigit", nullable = false)
    @NotNull
    public Boolean getAddcheckdigit();

    /**
     * Setter for <code>public.domain.addcheckdigitinherited</code>.
     */
    public IDomain setAddcheckdigitinherited(Boolean value);

    /**
     * Getter for <code>public.domain.addcheckdigitinherited</code>.
     */
    @Column(name = "addcheckdigitinherited", nullable = false)
    @NotNull
    public Boolean getAddcheckdigitinherited();

    /**
     * Setter for <code>public.domain.lengthincludescheckdigit</code>.
     */
    public IDomain setLengthincludescheckdigit(Boolean value);

    /**
     * Getter for <code>public.domain.lengthincludescheckdigit</code>.
     */
    @Column(name = "lengthincludescheckdigit", nullable = false)
    @NotNull
    public Boolean getLengthincludescheckdigit();

    /**
     * Setter for <code>public.domain.lengthincludescheckdigitinherited</code>.
     */
    public IDomain setLengthincludescheckdigitinherited(Boolean value);

    /**
     * Getter for <code>public.domain.lengthincludescheckdigitinherited</code>.
     */
    @Column(name = "lengthincludescheckdigitinherited", nullable = false)
    @NotNull
    public Boolean getLengthincludescheckdigitinherited();

    /**
     * Setter for <code>public.domain.salt</code>.
     */
    public IDomain setSalt(String value);

    /**
     * Getter for <code>public.domain.salt</code>.
     */
    @Column(name = "salt", nullable = false)
    @NotNull
    public String getSalt();

    /**
     * Setter for <code>public.domain.saltlength</code>.
     */
    public IDomain setSaltlength(Integer value);

    /**
     * Getter for <code>public.domain.saltlength</code>.
     */
    @Column(name = "saltlength", nullable = false)
    @NotNull
    public Integer getSaltlength();

    /**
     * Setter for <code>public.domain.description</code>.
     */
    public IDomain setDescription(String value);

    /**
     * Getter for <code>public.domain.description</code>.
     */
    @Column(name = "description")
    public String getDescription();

    /**
     * Setter for <code>public.domain.superdomainid</code>.
     */
    public IDomain setSuperdomainid(Integer value);

    /**
     * Getter for <code>public.domain.superdomainid</code>.
     */
    @Column(name = "superdomainid")
    public Integer getSuperdomainid();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IDomain
     */
    public void from(IDomain from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IDomain
     */
    public <E extends IDomain> E into(E into);
}
