/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.jooq.generated.tables.interfaces;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "person",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "person_firstname_lastname_birthname_administrativegender_da_key", columnNames = { "firstname", "lastname", "birthname", "administrativegender", "dateofbirth", "street", "postalcode", "city", "country" }),
        @UniqueConstraint(name = "person_identifier_idtype_key", columnNames = { "identifier", "idtype" })
    },
    indexes = {
        @Index(name = "person_firstname_lastname_admgender_dob_uindex", columnList = "firstname ASC, lastname ASC, administrativegender ASC, dateofbirth ASC"),
        @Index(name = "person_firstname_lastname_admgender_uindex", columnList = "firstname ASC, lastname ASC, administrativegender ASC"),
        @Index(name = "person_firstname_lastname_dob_uindex", columnList = "firstname ASC, lastname ASC, dateofbirth ASC"),
        @Index(name = "person_firstname_lastname_uindex", columnList = "firstname ASC, lastname ASC"),
        @Index(name = "person_firstname_uindex", columnList = "firstname ASC"),
        @Index(name = "person_identifier_uindex", columnList = "identifier ASC"),
        @Index(name = "person_lastname_uindex", columnList = "lastname ASC"),
        @Index(name = "person_street_postalcode_city_country_uindex", columnList = "street ASC, postalcode ASC, city ASC, country ASC")
    }
)
public interface IPerson extends Serializable {

    /**
     * Setter for <code>public.person.id</code>.
     */
    public IPerson setId(Integer value);

    /**
     * Getter for <code>public.person.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    public Integer getId();

    /**
     * Setter for <code>public.person.firstname</code>.
     */
    public IPerson setFirstname(String value);

    /**
     * Getter for <code>public.person.firstname</code>.
     */
    @Column(name = "firstname", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getFirstname();

    /**
     * Setter for <code>public.person.lastname</code>.
     */
    public IPerson setLastname(String value);

    /**
     * Getter for <code>public.person.lastname</code>.
     */
    @Column(name = "lastname", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getLastname();

    /**
     * Setter for <code>public.person.birthname</code>.
     */
    public IPerson setBirthname(String value);

    /**
     * Getter for <code>public.person.birthname</code>.
     */
    @Column(name = "birthname", length = 255)
    @Size(max = 255)
    public String getBirthname();

    /**
     * Setter for <code>public.person.administrativegender</code>.
     */
    public IPerson setAdministrativegender(String value);

    /**
     * Getter for <code>public.person.administrativegender</code>.
     */
    @Column(name = "administrativegender", nullable = false, length = 1)
    @NotNull
    @Size(max = 1)
    public String getAdministrativegender();

    /**
     * Setter for <code>public.person.dateofbirth</code>.
     */
    public IPerson setDateofbirth(LocalDate value);

    /**
     * Getter for <code>public.person.dateofbirth</code>.
     */
    @Column(name = "dateofbirth")
    public LocalDate getDateofbirth();

    /**
     * Setter for <code>public.person.street</code>.
     */
    public IPerson setStreet(String value);

    /**
     * Getter for <code>public.person.street</code>.
     */
    @Column(name = "street", length = 255)
    @Size(max = 255)
    public String getStreet();

    /**
     * Setter for <code>public.person.postalcode</code>.
     */
    public IPerson setPostalcode(String value);

    /**
     * Getter for <code>public.person.postalcode</code>.
     */
    @Column(name = "postalcode", length = 20)
    @Size(max = 20)
    public String getPostalcode();

    /**
     * Setter for <code>public.person.city</code>.
     */
    public IPerson setCity(String value);

    /**
     * Getter for <code>public.person.city</code>.
     */
    @Column(name = "city", length = 255)
    @Size(max = 255)
    public String getCity();

    /**
     * Setter for <code>public.person.country</code>.
     */
    public IPerson setCountry(String value);

    /**
     * Getter for <code>public.person.country</code>.
     */
    @Column(name = "country", length = 100)
    @Size(max = 100)
    public String getCountry();

    /**
     * Setter for <code>public.person.identifier</code>.
     */
    public IPerson setIdentifier(String value);

    /**
     * Getter for <code>public.person.identifier</code>.
     */
    @Column(name = "identifier", nullable = false)
    @NotNull
    public String getIdentifier();

    /**
     * Setter for <code>public.person.idtype</code>.
     */
    public IPerson setIdtype(String value);

    /**
     * Getter for <code>public.person.idtype</code>.
     */
    @Column(name = "idtype", nullable = false)
    @NotNull
    public String getIdtype();

    /**
     * Setter for <code>public.person.identifieralgorithm</code>.
     */
    public IPerson setIdentifieralgorithm(Integer value);

    /**
     * Getter for <code>public.person.identifieralgorithm</code>.
     */
    @Column(name = "identifieralgorithm", nullable = false)
    @NotNull
    public Integer getIdentifieralgorithm();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IPerson
     */
    public void from(IPerson from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IPerson
     */
    public <E extends IPerson> E into(E into);
}
