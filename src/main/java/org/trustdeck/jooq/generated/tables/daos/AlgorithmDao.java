/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.trustdeck.jooq.generated.tables.Algorithm;
import org.trustdeck.jooq.generated.tables.records.AlgorithmRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AlgorithmDao extends DAOImpl<AlgorithmRecord, org.trustdeck.jooq.generated.tables.pojos.Algorithm, Integer> {

    /**
     * Create a new AlgorithmDao without any configuration
     */
    public AlgorithmDao() {
        super(Algorithm.ALGORITHM, org.trustdeck.jooq.generated.tables.pojos.Algorithm.class);
    }

    /**
     * Create a new AlgorithmDao with an attached configuration
     */
    public AlgorithmDao(Configuration configuration) {
        super(Algorithm.ALGORITHM, org.trustdeck.jooq.generated.tables.pojos.Algorithm.class, configuration);
    }

    @Override
    public Integer getId(org.trustdeck.jooq.generated.tables.pojos.Algorithm object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchById(Integer... values) {
        return fetch(Algorithm.ALGORITHM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.trustdeck.jooq.generated.tables.pojos.Algorithm fetchOneById(Integer value) {
        return fetchOne(Algorithm.ALGORITHM.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchOptionalById(Integer value) {
        return fetchOptional(Algorithm.ALGORITHM.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByName(String... values) {
        return fetch(Algorithm.ALGORITHM.NAME, values);
    }

    /**
     * Fetch records that have <code>alphabet BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfAlphabet(String lowerInclusive, String upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.ALPHABET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>alphabet IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByAlphabet(String... values) {
        return fetch(Algorithm.ALGORITHM.ALPHABET, values);
    }

    /**
     * Fetch records that have <code>randomalgorithmdesiredsize BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfRandomalgorithmdesiredsize(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.RANDOMALGORITHMDESIREDSIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>randomalgorithmdesiredsize IN
     * (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByRandomalgorithmdesiredsize(Long... values) {
        return fetch(Algorithm.ALGORITHM.RANDOMALGORITHMDESIREDSIZE, values);
    }

    /**
     * Fetch records that have <code>randomalgorithmdesiredsuccessprobability
     * BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfRandomalgorithmdesiredsuccessprobability(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.RANDOMALGORITHMDESIREDSUCCESSPROBABILITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>randomalgorithmdesiredsuccessprobability IN
     * (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByRandomalgorithmdesiredsuccessprobability(Double... values) {
        return fetch(Algorithm.ALGORITHM.RANDOMALGORITHMDESIREDSUCCESSPROBABILITY, values);
    }

    /**
     * Fetch records that have <code>consecutivevaluecounter BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfConsecutivevaluecounter(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.CONSECUTIVEVALUECOUNTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>consecutivevaluecounter IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByConsecutivevaluecounter(Long... values) {
        return fetch(Algorithm.ALGORITHM.CONSECUTIVEVALUECOUNTER, values);
    }

    /**
     * Fetch records that have <code>pseudonymlength BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfPseudonymlength(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.PSEUDONYMLENGTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pseudonymlength IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByPseudonymlength(Integer... values) {
        return fetch(Algorithm.ALGORITHM.PSEUDONYMLENGTH, values);
    }

    /**
     * Fetch records that have <code>paddingcharacter BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfPaddingcharacter(String lowerInclusive, String upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.PADDINGCHARACTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>paddingcharacter IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByPaddingcharacter(String... values) {
        return fetch(Algorithm.ALGORITHM.PADDINGCHARACTER, values);
    }

    /**
     * Fetch records that have <code>addcheckdigit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfAddcheckdigit(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.ADDCHECKDIGIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>addcheckdigit IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByAddcheckdigit(Boolean... values) {
        return fetch(Algorithm.ALGORITHM.ADDCHECKDIGIT, values);
    }

    /**
     * Fetch records that have <code>lengthincludescheckdigit BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfLengthincludescheckdigit(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.LENGTHINCLUDESCHECKDIGIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lengthincludescheckdigit IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchByLengthincludescheckdigit(Boolean... values) {
        return fetch(Algorithm.ALGORITHM.LENGTHINCLUDESCHECKDIGIT, values);
    }

    /**
     * Fetch records that have <code>salt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfSalt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.SALT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>salt IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchBySalt(String... values) {
        return fetch(Algorithm.ALGORITHM.SALT, values);
    }

    /**
     * Fetch records that have <code>saltlength BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchRangeOfSaltlength(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Algorithm.ALGORITHM.SALTLENGTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>saltlength IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Algorithm> fetchBySaltlength(Integer... values) {
        return fetch(Algorithm.ALGORITHM.SALTLENGTH, values);
    }
}
