/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.jooq.generated.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import org.trustdeck.jooq.generated.tables.interfaces.IDomain;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "domain",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "domain_name_key", columnNames = { "name" })
    },
    indexes = {
        @Index(name = "metadataidx", unique = true, columnList = "name ASC")
    }
)
public class Domain implements IDomain {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String name;
    private String prefix;
    private LocalDateTime validfrom;
    private Boolean validfrominherited;
    private LocalDateTime validto;
    private Boolean validtoinherited;
    private Boolean enforcestartdatevalidity;
    private Boolean enforcestartdatevalidityinherited;
    private Boolean enforceenddatevalidity;
    private Boolean enforceenddatevalidityinherited;
    private String algorithm;
    private Boolean algorithminherited;
    private String alphabet;
    private Boolean alphabetinherited;
    private Long randomalgorithmdesiredsize;
    private Boolean randomalgorithmdesiredsizeinherited;
    private Double randomalgorithmdesiredsuccessprobability;
    private Boolean randomalgorithmdesiredsuccessprobabilityinherited;
    private Boolean multiplepsnallowed;
    private Boolean multiplepsnallowedinherited;
    private Long consecutivevaluecounter;
    private Integer pseudonymlength;
    private Boolean pseudonymlengthinherited;
    private String paddingcharacter;
    private Boolean paddingcharacterinherited;
    private Boolean addcheckdigit;
    private Boolean addcheckdigitinherited;
    private Boolean lengthincludescheckdigit;
    private Boolean lengthincludescheckdigitinherited;
    private String salt;
    private Integer saltlength;
    private String description;
    private Integer superdomainid;

    public Domain() {}

    public Domain(IDomain value) {
        this.id = value.getId();
        this.name = value.getName();
        this.prefix = value.getPrefix();
        this.validfrom = value.getValidfrom();
        this.validfrominherited = value.getValidfrominherited();
        this.validto = value.getValidto();
        this.validtoinherited = value.getValidtoinherited();
        this.enforcestartdatevalidity = value.getEnforcestartdatevalidity();
        this.enforcestartdatevalidityinherited = value.getEnforcestartdatevalidityinherited();
        this.enforceenddatevalidity = value.getEnforceenddatevalidity();
        this.enforceenddatevalidityinherited = value.getEnforceenddatevalidityinherited();
        this.algorithm = value.getAlgorithm();
        this.algorithminherited = value.getAlgorithminherited();
        this.alphabet = value.getAlphabet();
        this.alphabetinherited = value.getAlphabetinherited();
        this.randomalgorithmdesiredsize = value.getRandomalgorithmdesiredsize();
        this.randomalgorithmdesiredsizeinherited = value.getRandomalgorithmdesiredsizeinherited();
        this.randomalgorithmdesiredsuccessprobability = value.getRandomalgorithmdesiredsuccessprobability();
        this.randomalgorithmdesiredsuccessprobabilityinherited = value.getRandomalgorithmdesiredsuccessprobabilityinherited();
        this.multiplepsnallowed = value.getMultiplepsnallowed();
        this.multiplepsnallowedinherited = value.getMultiplepsnallowedinherited();
        this.consecutivevaluecounter = value.getConsecutivevaluecounter();
        this.pseudonymlength = value.getPseudonymlength();
        this.pseudonymlengthinherited = value.getPseudonymlengthinherited();
        this.paddingcharacter = value.getPaddingcharacter();
        this.paddingcharacterinherited = value.getPaddingcharacterinherited();
        this.addcheckdigit = value.getAddcheckdigit();
        this.addcheckdigitinherited = value.getAddcheckdigitinherited();
        this.lengthincludescheckdigit = value.getLengthincludescheckdigit();
        this.lengthincludescheckdigitinherited = value.getLengthincludescheckdigitinherited();
        this.salt = value.getSalt();
        this.saltlength = value.getSaltlength();
        this.description = value.getDescription();
        this.superdomainid = value.getSuperdomainid();
    }

    public Domain(
        Integer id,
        String name,
        String prefix,
        LocalDateTime validfrom,
        Boolean validfrominherited,
        LocalDateTime validto,
        Boolean validtoinherited,
        Boolean enforcestartdatevalidity,
        Boolean enforcestartdatevalidityinherited,
        Boolean enforceenddatevalidity,
        Boolean enforceenddatevalidityinherited,
        String algorithm,
        Boolean algorithminherited,
        String alphabet,
        Boolean alphabetinherited,
        Long randomalgorithmdesiredsize,
        Boolean randomalgorithmdesiredsizeinherited,
        Double randomalgorithmdesiredsuccessprobability,
        Boolean randomalgorithmdesiredsuccessprobabilityinherited,
        Boolean multiplepsnallowed,
        Boolean multiplepsnallowedinherited,
        Long consecutivevaluecounter,
        Integer pseudonymlength,
        Boolean pseudonymlengthinherited,
        String paddingcharacter,
        Boolean paddingcharacterinherited,
        Boolean addcheckdigit,
        Boolean addcheckdigitinherited,
        Boolean lengthincludescheckdigit,
        Boolean lengthincludescheckdigitinherited,
        String salt,
        Integer saltlength,
        String description,
        Integer superdomainid
    ) {
        this.id = id;
        this.name = name;
        this.prefix = prefix;
        this.validfrom = validfrom;
        this.validfrominherited = validfrominherited;
        this.validto = validto;
        this.validtoinherited = validtoinherited;
        this.enforcestartdatevalidity = enforcestartdatevalidity;
        this.enforcestartdatevalidityinherited = enforcestartdatevalidityinherited;
        this.enforceenddatevalidity = enforceenddatevalidity;
        this.enforceenddatevalidityinherited = enforceenddatevalidityinherited;
        this.algorithm = algorithm;
        this.algorithminherited = algorithminherited;
        this.alphabet = alphabet;
        this.alphabetinherited = alphabetinherited;
        this.randomalgorithmdesiredsize = randomalgorithmdesiredsize;
        this.randomalgorithmdesiredsizeinherited = randomalgorithmdesiredsizeinherited;
        this.randomalgorithmdesiredsuccessprobability = randomalgorithmdesiredsuccessprobability;
        this.randomalgorithmdesiredsuccessprobabilityinherited = randomalgorithmdesiredsuccessprobabilityinherited;
        this.multiplepsnallowed = multiplepsnallowed;
        this.multiplepsnallowedinherited = multiplepsnallowedinherited;
        this.consecutivevaluecounter = consecutivevaluecounter;
        this.pseudonymlength = pseudonymlength;
        this.pseudonymlengthinherited = pseudonymlengthinherited;
        this.paddingcharacter = paddingcharacter;
        this.paddingcharacterinherited = paddingcharacterinherited;
        this.addcheckdigit = addcheckdigit;
        this.addcheckdigitinherited = addcheckdigitinherited;
        this.lengthincludescheckdigit = lengthincludescheckdigit;
        this.lengthincludescheckdigitinherited = lengthincludescheckdigitinherited;
        this.salt = salt;
        this.saltlength = saltlength;
        this.description = description;
        this.superdomainid = superdomainid;
    }

    /**
     * Getter for <code>public.domain.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @Override
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.domain.id</code>.
     */
    @Override
    public Domain setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.domain.name</code>.
     */
    @Column(name = "name", nullable = false)
    @NotNull
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.domain.name</code>.
     */
    @Override
    public Domain setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>public.domain.prefix</code>.
     */
    @Column(name = "prefix", nullable = false)
    @NotNull
    @Override
    public String getPrefix() {
        return this.prefix;
    }

    /**
     * Setter for <code>public.domain.prefix</code>.
     */
    @Override
    public Domain setPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }

    /**
     * Getter for <code>public.domain.validfrom</code>.
     */
    @Column(name = "validfrom", nullable = false, precision = 6)
    @NotNull
    @Override
    public LocalDateTime getValidfrom() {
        return this.validfrom;
    }

    /**
     * Setter for <code>public.domain.validfrom</code>.
     */
    @Override
    public Domain setValidfrom(LocalDateTime validfrom) {
        this.validfrom = validfrom;
        return this;
    }

    /**
     * Getter for <code>public.domain.validfrominherited</code>.
     */
    @Column(name = "validfrominherited", nullable = false)
    @NotNull
    @Override
    public Boolean getValidfrominherited() {
        return this.validfrominherited;
    }

    /**
     * Setter for <code>public.domain.validfrominherited</code>.
     */
    @Override
    public Domain setValidfrominherited(Boolean validfrominherited) {
        this.validfrominherited = validfrominherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.validto</code>.
     */
    @Column(name = "validto", nullable = false, precision = 6)
    @NotNull
    @Override
    public LocalDateTime getValidto() {
        return this.validto;
    }

    /**
     * Setter for <code>public.domain.validto</code>.
     */
    @Override
    public Domain setValidto(LocalDateTime validto) {
        this.validto = validto;
        return this;
    }

    /**
     * Getter for <code>public.domain.validtoinherited</code>.
     */
    @Column(name = "validtoinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getValidtoinherited() {
        return this.validtoinherited;
    }

    /**
     * Setter for <code>public.domain.validtoinherited</code>.
     */
    @Override
    public Domain setValidtoinherited(Boolean validtoinherited) {
        this.validtoinherited = validtoinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.enforcestartdatevalidity</code>.
     */
    @Column(name = "enforcestartdatevalidity", nullable = false)
    @NotNull
    @Override
    public Boolean getEnforcestartdatevalidity() {
        return this.enforcestartdatevalidity;
    }

    /**
     * Setter for <code>public.domain.enforcestartdatevalidity</code>.
     */
    @Override
    public Domain setEnforcestartdatevalidity(Boolean enforcestartdatevalidity) {
        this.enforcestartdatevalidity = enforcestartdatevalidity;
        return this;
    }

    /**
     * Getter for <code>public.domain.enforcestartdatevalidityinherited</code>.
     */
    @Column(name = "enforcestartdatevalidityinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getEnforcestartdatevalidityinherited() {
        return this.enforcestartdatevalidityinherited;
    }

    /**
     * Setter for <code>public.domain.enforcestartdatevalidityinherited</code>.
     */
    @Override
    public Domain setEnforcestartdatevalidityinherited(Boolean enforcestartdatevalidityinherited) {
        this.enforcestartdatevalidityinherited = enforcestartdatevalidityinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.enforceenddatevalidity</code>.
     */
    @Column(name = "enforceenddatevalidity", nullable = false)
    @NotNull
    @Override
    public Boolean getEnforceenddatevalidity() {
        return this.enforceenddatevalidity;
    }

    /**
     * Setter for <code>public.domain.enforceenddatevalidity</code>.
     */
    @Override
    public Domain setEnforceenddatevalidity(Boolean enforceenddatevalidity) {
        this.enforceenddatevalidity = enforceenddatevalidity;
        return this;
    }

    /**
     * Getter for <code>public.domain.enforceenddatevalidityinherited</code>.
     */
    @Column(name = "enforceenddatevalidityinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getEnforceenddatevalidityinherited() {
        return this.enforceenddatevalidityinherited;
    }

    /**
     * Setter for <code>public.domain.enforceenddatevalidityinherited</code>.
     */
    @Override
    public Domain setEnforceenddatevalidityinherited(Boolean enforceenddatevalidityinherited) {
        this.enforceenddatevalidityinherited = enforceenddatevalidityinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.algorithm</code>.
     */
    @Column(name = "algorithm", nullable = false)
    @NotNull
    @Override
    public String getAlgorithm() {
        return this.algorithm;
    }

    /**
     * Setter for <code>public.domain.algorithm</code>.
     */
    @Override
    public Domain setAlgorithm(String algorithm) {
        this.algorithm = algorithm;
        return this;
    }

    /**
     * Getter for <code>public.domain.algorithminherited</code>.
     */
    @Column(name = "algorithminherited", nullable = false)
    @NotNull
    @Override
    public Boolean getAlgorithminherited() {
        return this.algorithminherited;
    }

    /**
     * Setter for <code>public.domain.algorithminherited</code>.
     */
    @Override
    public Domain setAlgorithminherited(Boolean algorithminherited) {
        this.algorithminherited = algorithminherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.alphabet</code>.
     */
    @Column(name = "alphabet", nullable = false)
    @NotNull
    @Override
    public String getAlphabet() {
        return this.alphabet;
    }

    /**
     * Setter for <code>public.domain.alphabet</code>.
     */
    @Override
    public Domain setAlphabet(String alphabet) {
        this.alphabet = alphabet;
        return this;
    }

    /**
     * Getter for <code>public.domain.alphabetinherited</code>.
     */
    @Column(name = "alphabetinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getAlphabetinherited() {
        return this.alphabetinherited;
    }

    /**
     * Setter for <code>public.domain.alphabetinherited</code>.
     */
    @Override
    public Domain setAlphabetinherited(Boolean alphabetinherited) {
        this.alphabetinherited = alphabetinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.randomalgorithmdesiredsize</code>.
     */
    @Column(name = "randomalgorithmdesiredsize", nullable = false)
    @NotNull
    @Override
    public Long getRandomalgorithmdesiredsize() {
        return this.randomalgorithmdesiredsize;
    }

    /**
     * Setter for <code>public.domain.randomalgorithmdesiredsize</code>.
     */
    @Override
    public Domain setRandomalgorithmdesiredsize(Long randomalgorithmdesiredsize) {
        this.randomalgorithmdesiredsize = randomalgorithmdesiredsize;
        return this;
    }

    /**
     * Getter for
     * <code>public.domain.randomalgorithmdesiredsizeinherited</code>.
     */
    @Column(name = "randomalgorithmdesiredsizeinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getRandomalgorithmdesiredsizeinherited() {
        return this.randomalgorithmdesiredsizeinherited;
    }

    /**
     * Setter for
     * <code>public.domain.randomalgorithmdesiredsizeinherited</code>.
     */
    @Override
    public Domain setRandomalgorithmdesiredsizeinherited(Boolean randomalgorithmdesiredsizeinherited) {
        this.randomalgorithmdesiredsizeinherited = randomalgorithmdesiredsizeinherited;
        return this;
    }

    /**
     * Getter for
     * <code>public.domain.randomalgorithmdesiredsuccessprobability</code>.
     */
    @Column(name = "randomalgorithmdesiredsuccessprobability", nullable = false)
    @NotNull
    @Override
    public Double getRandomalgorithmdesiredsuccessprobability() {
        return this.randomalgorithmdesiredsuccessprobability;
    }

    /**
     * Setter for
     * <code>public.domain.randomalgorithmdesiredsuccessprobability</code>.
     */
    @Override
    public Domain setRandomalgorithmdesiredsuccessprobability(Double randomalgorithmdesiredsuccessprobability) {
        this.randomalgorithmdesiredsuccessprobability = randomalgorithmdesiredsuccessprobability;
        return this;
    }

    /**
     * Getter for
     * <code>public.domain.randomalgorithmdesiredsuccessprobabilityinherited</code>.
     */
    @Column(name = "randomalgorithmdesiredsuccessprobabilityinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getRandomalgorithmdesiredsuccessprobabilityinherited() {
        return this.randomalgorithmdesiredsuccessprobabilityinherited;
    }

    /**
     * Setter for
     * <code>public.domain.randomalgorithmdesiredsuccessprobabilityinherited</code>.
     */
    @Override
    public Domain setRandomalgorithmdesiredsuccessprobabilityinherited(Boolean randomalgorithmdesiredsuccessprobabilityinherited) {
        this.randomalgorithmdesiredsuccessprobabilityinherited = randomalgorithmdesiredsuccessprobabilityinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.multiplepsnallowed</code>.
     */
    @Column(name = "multiplepsnallowed", nullable = false)
    @NotNull
    @Override
    public Boolean getMultiplepsnallowed() {
        return this.multiplepsnallowed;
    }

    /**
     * Setter for <code>public.domain.multiplepsnallowed</code>.
     */
    @Override
    public Domain setMultiplepsnallowed(Boolean multiplepsnallowed) {
        this.multiplepsnallowed = multiplepsnallowed;
        return this;
    }

    /**
     * Getter for <code>public.domain.multiplepsnallowedinherited</code>.
     */
    @Column(name = "multiplepsnallowedinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getMultiplepsnallowedinherited() {
        return this.multiplepsnallowedinherited;
    }

    /**
     * Setter for <code>public.domain.multiplepsnallowedinherited</code>.
     */
    @Override
    public Domain setMultiplepsnallowedinherited(Boolean multiplepsnallowedinherited) {
        this.multiplepsnallowedinherited = multiplepsnallowedinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.consecutivevaluecounter</code>.
     */
    @Column(name = "consecutivevaluecounter", nullable = false)
    @NotNull
    @Override
    public Long getConsecutivevaluecounter() {
        return this.consecutivevaluecounter;
    }

    /**
     * Setter for <code>public.domain.consecutivevaluecounter</code>.
     */
    @Override
    public Domain setConsecutivevaluecounter(Long consecutivevaluecounter) {
        this.consecutivevaluecounter = consecutivevaluecounter;
        return this;
    }

    /**
     * Getter for <code>public.domain.pseudonymlength</code>.
     */
    @Column(name = "pseudonymlength", nullable = false)
    @NotNull
    @Override
    public Integer getPseudonymlength() {
        return this.pseudonymlength;
    }

    /**
     * Setter for <code>public.domain.pseudonymlength</code>.
     */
    @Override
    public Domain setPseudonymlength(Integer pseudonymlength) {
        this.pseudonymlength = pseudonymlength;
        return this;
    }

    /**
     * Getter for <code>public.domain.pseudonymlengthinherited</code>.
     */
    @Column(name = "pseudonymlengthinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getPseudonymlengthinherited() {
        return this.pseudonymlengthinherited;
    }

    /**
     * Setter for <code>public.domain.pseudonymlengthinherited</code>.
     */
    @Override
    public Domain setPseudonymlengthinherited(Boolean pseudonymlengthinherited) {
        this.pseudonymlengthinherited = pseudonymlengthinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.paddingcharacter</code>.
     */
    @Column(name = "paddingcharacter", nullable = false, length = 1)
    @NotNull
    @Size(max = 1)
    @Override
    public String getPaddingcharacter() {
        return this.paddingcharacter;
    }

    /**
     * Setter for <code>public.domain.paddingcharacter</code>.
     */
    @Override
    public Domain setPaddingcharacter(String paddingcharacter) {
        this.paddingcharacter = paddingcharacter;
        return this;
    }

    /**
     * Getter for <code>public.domain.paddingcharacterinherited</code>.
     */
    @Column(name = "paddingcharacterinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getPaddingcharacterinherited() {
        return this.paddingcharacterinherited;
    }

    /**
     * Setter for <code>public.domain.paddingcharacterinherited</code>.
     */
    @Override
    public Domain setPaddingcharacterinherited(Boolean paddingcharacterinherited) {
        this.paddingcharacterinherited = paddingcharacterinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.addcheckdigit</code>.
     */
    @Column(name = "addcheckdigit", nullable = false)
    @NotNull
    @Override
    public Boolean getAddcheckdigit() {
        return this.addcheckdigit;
    }

    /**
     * Setter for <code>public.domain.addcheckdigit</code>.
     */
    @Override
    public Domain setAddcheckdigit(Boolean addcheckdigit) {
        this.addcheckdigit = addcheckdigit;
        return this;
    }

    /**
     * Getter for <code>public.domain.addcheckdigitinherited</code>.
     */
    @Column(name = "addcheckdigitinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getAddcheckdigitinherited() {
        return this.addcheckdigitinherited;
    }

    /**
     * Setter for <code>public.domain.addcheckdigitinherited</code>.
     */
    @Override
    public Domain setAddcheckdigitinherited(Boolean addcheckdigitinherited) {
        this.addcheckdigitinherited = addcheckdigitinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.lengthincludescheckdigit</code>.
     */
    @Column(name = "lengthincludescheckdigit", nullable = false)
    @NotNull
    @Override
    public Boolean getLengthincludescheckdigit() {
        return this.lengthincludescheckdigit;
    }

    /**
     * Setter for <code>public.domain.lengthincludescheckdigit</code>.
     */
    @Override
    public Domain setLengthincludescheckdigit(Boolean lengthincludescheckdigit) {
        this.lengthincludescheckdigit = lengthincludescheckdigit;
        return this;
    }

    /**
     * Getter for <code>public.domain.lengthincludescheckdigitinherited</code>.
     */
    @Column(name = "lengthincludescheckdigitinherited", nullable = false)
    @NotNull
    @Override
    public Boolean getLengthincludescheckdigitinherited() {
        return this.lengthincludescheckdigitinherited;
    }

    /**
     * Setter for <code>public.domain.lengthincludescheckdigitinherited</code>.
     */
    @Override
    public Domain setLengthincludescheckdigitinherited(Boolean lengthincludescheckdigitinherited) {
        this.lengthincludescheckdigitinherited = lengthincludescheckdigitinherited;
        return this;
    }

    /**
     * Getter for <code>public.domain.salt</code>.
     */
    @Column(name = "salt", nullable = false)
    @NotNull
    @Override
    public String getSalt() {
        return this.salt;
    }

    /**
     * Setter for <code>public.domain.salt</code>.
     */
    @Override
    public Domain setSalt(String salt) {
        this.salt = salt;
        return this;
    }

    /**
     * Getter for <code>public.domain.saltlength</code>.
     */
    @Column(name = "saltlength", nullable = false)
    @NotNull
    @Override
    public Integer getSaltlength() {
        return this.saltlength;
    }

    /**
     * Setter for <code>public.domain.saltlength</code>.
     */
    @Override
    public Domain setSaltlength(Integer saltlength) {
        this.saltlength = saltlength;
        return this;
    }

    /**
     * Getter for <code>public.domain.description</code>.
     */
    @Column(name = "description")
    @Override
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.domain.description</code>.
     */
    @Override
    public Domain setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>public.domain.superdomainid</code>.
     */
    @Column(name = "superdomainid")
    @Override
    public Integer getSuperdomainid() {
        return this.superdomainid;
    }

    /**
     * Setter for <code>public.domain.superdomainid</code>.
     */
    @Override
    public Domain setSuperdomainid(Integer superdomainid) {
        this.superdomainid = superdomainid;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Domain other = (Domain) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.prefix == null) {
            if (other.prefix != null)
                return false;
        }
        else if (!this.prefix.equals(other.prefix))
            return false;
        if (this.validfrom == null) {
            if (other.validfrom != null)
                return false;
        }
        else if (!this.validfrom.equals(other.validfrom))
            return false;
        if (this.validfrominherited == null) {
            if (other.validfrominherited != null)
                return false;
        }
        else if (!this.validfrominherited.equals(other.validfrominherited))
            return false;
        if (this.validto == null) {
            if (other.validto != null)
                return false;
        }
        else if (!this.validto.equals(other.validto))
            return false;
        if (this.validtoinherited == null) {
            if (other.validtoinherited != null)
                return false;
        }
        else if (!this.validtoinherited.equals(other.validtoinherited))
            return false;
        if (this.enforcestartdatevalidity == null) {
            if (other.enforcestartdatevalidity != null)
                return false;
        }
        else if (!this.enforcestartdatevalidity.equals(other.enforcestartdatevalidity))
            return false;
        if (this.enforcestartdatevalidityinherited == null) {
            if (other.enforcestartdatevalidityinherited != null)
                return false;
        }
        else if (!this.enforcestartdatevalidityinherited.equals(other.enforcestartdatevalidityinherited))
            return false;
        if (this.enforceenddatevalidity == null) {
            if (other.enforceenddatevalidity != null)
                return false;
        }
        else if (!this.enforceenddatevalidity.equals(other.enforceenddatevalidity))
            return false;
        if (this.enforceenddatevalidityinherited == null) {
            if (other.enforceenddatevalidityinherited != null)
                return false;
        }
        else if (!this.enforceenddatevalidityinherited.equals(other.enforceenddatevalidityinherited))
            return false;
        if (this.algorithm == null) {
            if (other.algorithm != null)
                return false;
        }
        else if (!this.algorithm.equals(other.algorithm))
            return false;
        if (this.algorithminherited == null) {
            if (other.algorithminherited != null)
                return false;
        }
        else if (!this.algorithminherited.equals(other.algorithminherited))
            return false;
        if (this.alphabet == null) {
            if (other.alphabet != null)
                return false;
        }
        else if (!this.alphabet.equals(other.alphabet))
            return false;
        if (this.alphabetinherited == null) {
            if (other.alphabetinherited != null)
                return false;
        }
        else if (!this.alphabetinherited.equals(other.alphabetinherited))
            return false;
        if (this.randomalgorithmdesiredsize == null) {
            if (other.randomalgorithmdesiredsize != null)
                return false;
        }
        else if (!this.randomalgorithmdesiredsize.equals(other.randomalgorithmdesiredsize))
            return false;
        if (this.randomalgorithmdesiredsizeinherited == null) {
            if (other.randomalgorithmdesiredsizeinherited != null)
                return false;
        }
        else if (!this.randomalgorithmdesiredsizeinherited.equals(other.randomalgorithmdesiredsizeinherited))
            return false;
        if (this.randomalgorithmdesiredsuccessprobability == null) {
            if (other.randomalgorithmdesiredsuccessprobability != null)
                return false;
        }
        else if (!this.randomalgorithmdesiredsuccessprobability.equals(other.randomalgorithmdesiredsuccessprobability))
            return false;
        if (this.randomalgorithmdesiredsuccessprobabilityinherited == null) {
            if (other.randomalgorithmdesiredsuccessprobabilityinherited != null)
                return false;
        }
        else if (!this.randomalgorithmdesiredsuccessprobabilityinherited.equals(other.randomalgorithmdesiredsuccessprobabilityinherited))
            return false;
        if (this.multiplepsnallowed == null) {
            if (other.multiplepsnallowed != null)
                return false;
        }
        else if (!this.multiplepsnallowed.equals(other.multiplepsnallowed))
            return false;
        if (this.multiplepsnallowedinherited == null) {
            if (other.multiplepsnallowedinherited != null)
                return false;
        }
        else if (!this.multiplepsnallowedinherited.equals(other.multiplepsnallowedinherited))
            return false;
        if (this.consecutivevaluecounter == null) {
            if (other.consecutivevaluecounter != null)
                return false;
        }
        else if (!this.consecutivevaluecounter.equals(other.consecutivevaluecounter))
            return false;
        if (this.pseudonymlength == null) {
            if (other.pseudonymlength != null)
                return false;
        }
        else if (!this.pseudonymlength.equals(other.pseudonymlength))
            return false;
        if (this.pseudonymlengthinherited == null) {
            if (other.pseudonymlengthinherited != null)
                return false;
        }
        else if (!this.pseudonymlengthinherited.equals(other.pseudonymlengthinherited))
            return false;
        if (this.paddingcharacter == null) {
            if (other.paddingcharacter != null)
                return false;
        }
        else if (!this.paddingcharacter.equals(other.paddingcharacter))
            return false;
        if (this.paddingcharacterinherited == null) {
            if (other.paddingcharacterinherited != null)
                return false;
        }
        else if (!this.paddingcharacterinherited.equals(other.paddingcharacterinherited))
            return false;
        if (this.addcheckdigit == null) {
            if (other.addcheckdigit != null)
                return false;
        }
        else if (!this.addcheckdigit.equals(other.addcheckdigit))
            return false;
        if (this.addcheckdigitinherited == null) {
            if (other.addcheckdigitinherited != null)
                return false;
        }
        else if (!this.addcheckdigitinherited.equals(other.addcheckdigitinherited))
            return false;
        if (this.lengthincludescheckdigit == null) {
            if (other.lengthincludescheckdigit != null)
                return false;
        }
        else if (!this.lengthincludescheckdigit.equals(other.lengthincludescheckdigit))
            return false;
        if (this.lengthincludescheckdigitinherited == null) {
            if (other.lengthincludescheckdigitinherited != null)
                return false;
        }
        else if (!this.lengthincludescheckdigitinherited.equals(other.lengthincludescheckdigitinherited))
            return false;
        if (this.salt == null) {
            if (other.salt != null)
                return false;
        }
        else if (!this.salt.equals(other.salt))
            return false;
        if (this.saltlength == null) {
            if (other.saltlength != null)
                return false;
        }
        else if (!this.saltlength.equals(other.saltlength))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.superdomainid == null) {
            if (other.superdomainid != null)
                return false;
        }
        else if (!this.superdomainid.equals(other.superdomainid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.prefix == null) ? 0 : this.prefix.hashCode());
        result = prime * result + ((this.validfrom == null) ? 0 : this.validfrom.hashCode());
        result = prime * result + ((this.validfrominherited == null) ? 0 : this.validfrominherited.hashCode());
        result = prime * result + ((this.validto == null) ? 0 : this.validto.hashCode());
        result = prime * result + ((this.validtoinherited == null) ? 0 : this.validtoinherited.hashCode());
        result = prime * result + ((this.enforcestartdatevalidity == null) ? 0 : this.enforcestartdatevalidity.hashCode());
        result = prime * result + ((this.enforcestartdatevalidityinherited == null) ? 0 : this.enforcestartdatevalidityinherited.hashCode());
        result = prime * result + ((this.enforceenddatevalidity == null) ? 0 : this.enforceenddatevalidity.hashCode());
        result = prime * result + ((this.enforceenddatevalidityinherited == null) ? 0 : this.enforceenddatevalidityinherited.hashCode());
        result = prime * result + ((this.algorithm == null) ? 0 : this.algorithm.hashCode());
        result = prime * result + ((this.algorithminherited == null) ? 0 : this.algorithminherited.hashCode());
        result = prime * result + ((this.alphabet == null) ? 0 : this.alphabet.hashCode());
        result = prime * result + ((this.alphabetinherited == null) ? 0 : this.alphabetinherited.hashCode());
        result = prime * result + ((this.randomalgorithmdesiredsize == null) ? 0 : this.randomalgorithmdesiredsize.hashCode());
        result = prime * result + ((this.randomalgorithmdesiredsizeinherited == null) ? 0 : this.randomalgorithmdesiredsizeinherited.hashCode());
        result = prime * result + ((this.randomalgorithmdesiredsuccessprobability == null) ? 0 : this.randomalgorithmdesiredsuccessprobability.hashCode());
        result = prime * result + ((this.randomalgorithmdesiredsuccessprobabilityinherited == null) ? 0 : this.randomalgorithmdesiredsuccessprobabilityinherited.hashCode());
        result = prime * result + ((this.multiplepsnallowed == null) ? 0 : this.multiplepsnallowed.hashCode());
        result = prime * result + ((this.multiplepsnallowedinherited == null) ? 0 : this.multiplepsnallowedinherited.hashCode());
        result = prime * result + ((this.consecutivevaluecounter == null) ? 0 : this.consecutivevaluecounter.hashCode());
        result = prime * result + ((this.pseudonymlength == null) ? 0 : this.pseudonymlength.hashCode());
        result = prime * result + ((this.pseudonymlengthinherited == null) ? 0 : this.pseudonymlengthinherited.hashCode());
        result = prime * result + ((this.paddingcharacter == null) ? 0 : this.paddingcharacter.hashCode());
        result = prime * result + ((this.paddingcharacterinherited == null) ? 0 : this.paddingcharacterinherited.hashCode());
        result = prime * result + ((this.addcheckdigit == null) ? 0 : this.addcheckdigit.hashCode());
        result = prime * result + ((this.addcheckdigitinherited == null) ? 0 : this.addcheckdigitinherited.hashCode());
        result = prime * result + ((this.lengthincludescheckdigit == null) ? 0 : this.lengthincludescheckdigit.hashCode());
        result = prime * result + ((this.lengthincludescheckdigitinherited == null) ? 0 : this.lengthincludescheckdigitinherited.hashCode());
        result = prime * result + ((this.salt == null) ? 0 : this.salt.hashCode());
        result = prime * result + ((this.saltlength == null) ? 0 : this.saltlength.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.superdomainid == null) ? 0 : this.superdomainid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Domain (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(prefix);
        sb.append(", ").append(validfrom);
        sb.append(", ").append(validfrominherited);
        sb.append(", ").append(validto);
        sb.append(", ").append(validtoinherited);
        sb.append(", ").append(enforcestartdatevalidity);
        sb.append(", ").append(enforcestartdatevalidityinherited);
        sb.append(", ").append(enforceenddatevalidity);
        sb.append(", ").append(enforceenddatevalidityinherited);
        sb.append(", ").append(algorithm);
        sb.append(", ").append(algorithminherited);
        sb.append(", ").append(alphabet);
        sb.append(", ").append(alphabetinherited);
        sb.append(", ").append(randomalgorithmdesiredsize);
        sb.append(", ").append(randomalgorithmdesiredsizeinherited);
        sb.append(", ").append(randomalgorithmdesiredsuccessprobability);
        sb.append(", ").append(randomalgorithmdesiredsuccessprobabilityinherited);
        sb.append(", ").append(multiplepsnallowed);
        sb.append(", ").append(multiplepsnallowedinherited);
        sb.append(", ").append(consecutivevaluecounter);
        sb.append(", ").append(pseudonymlength);
        sb.append(", ").append(pseudonymlengthinherited);
        sb.append(", ").append(paddingcharacter);
        sb.append(", ").append(paddingcharacterinherited);
        sb.append(", ").append(addcheckdigit);
        sb.append(", ").append(addcheckdigitinherited);
        sb.append(", ").append(lengthincludescheckdigit);
        sb.append(", ").append(lengthincludescheckdigitinherited);
        sb.append(", ").append(salt);
        sb.append(", ").append(saltlength);
        sb.append(", ").append(description);
        sb.append(", ").append(superdomainid);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDomain from) {
        setId(from.getId());
        setName(from.getName());
        setPrefix(from.getPrefix());
        setValidfrom(from.getValidfrom());
        setValidfrominherited(from.getValidfrominherited());
        setValidto(from.getValidto());
        setValidtoinherited(from.getValidtoinherited());
        setEnforcestartdatevalidity(from.getEnforcestartdatevalidity());
        setEnforcestartdatevalidityinherited(from.getEnforcestartdatevalidityinherited());
        setEnforceenddatevalidity(from.getEnforceenddatevalidity());
        setEnforceenddatevalidityinherited(from.getEnforceenddatevalidityinherited());
        setAlgorithm(from.getAlgorithm());
        setAlgorithminherited(from.getAlgorithminherited());
        setAlphabet(from.getAlphabet());
        setAlphabetinherited(from.getAlphabetinherited());
        setRandomalgorithmdesiredsize(from.getRandomalgorithmdesiredsize());
        setRandomalgorithmdesiredsizeinherited(from.getRandomalgorithmdesiredsizeinherited());
        setRandomalgorithmdesiredsuccessprobability(from.getRandomalgorithmdesiredsuccessprobability());
        setRandomalgorithmdesiredsuccessprobabilityinherited(from.getRandomalgorithmdesiredsuccessprobabilityinherited());
        setMultiplepsnallowed(from.getMultiplepsnallowed());
        setMultiplepsnallowedinherited(from.getMultiplepsnallowedinherited());
        setConsecutivevaluecounter(from.getConsecutivevaluecounter());
        setPseudonymlength(from.getPseudonymlength());
        setPseudonymlengthinherited(from.getPseudonymlengthinherited());
        setPaddingcharacter(from.getPaddingcharacter());
        setPaddingcharacterinherited(from.getPaddingcharacterinherited());
        setAddcheckdigit(from.getAddcheckdigit());
        setAddcheckdigitinherited(from.getAddcheckdigitinherited());
        setLengthincludescheckdigit(from.getLengthincludescheckdigit());
        setLengthincludescheckdigitinherited(from.getLengthincludescheckdigitinherited());
        setSalt(from.getSalt());
        setSaltlength(from.getSaltlength());
        setDescription(from.getDescription());
        setSuperdomainid(from.getSuperdomainid());
    }

    @Override
    public <E extends IDomain> E into(E into) {
        into.from(this);
        return into;
    }
}
