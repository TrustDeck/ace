/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.jooq.generated.tables.daos;


import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.trustdeck.jooq.generated.tables.Person;
import org.trustdeck.jooq.generated.tables.records.PersonRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PersonDao extends DAOImpl<PersonRecord, org.trustdeck.jooq.generated.tables.pojos.Person, Integer> {

    /**
     * Create a new PersonDao without any configuration
     */
    public PersonDao() {
        super(Person.PERSON, org.trustdeck.jooq.generated.tables.pojos.Person.class);
    }

    /**
     * Create a new PersonDao with an attached configuration
     */
    public PersonDao(Configuration configuration) {
        super(Person.PERSON, org.trustdeck.jooq.generated.tables.pojos.Person.class, configuration);
    }

    @Override
    public Integer getId(org.trustdeck.jooq.generated.tables.pojos.Person object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Person.PERSON.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchById(Integer... values) {
        return fetch(Person.PERSON.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.trustdeck.jooq.generated.tables.pojos.Person fetchOneById(Integer value) {
        return fetchOne(Person.PERSON.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.trustdeck.jooq.generated.tables.pojos.Person> fetchOptionalById(Integer value) {
        return fetchOptional(Person.PERSON.ID, value);
    }

    /**
     * Fetch records that have <code>firstname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfFirstname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.FIRSTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>firstname IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByFirstname(String... values) {
        return fetch(Person.PERSON.FIRSTNAME, values);
    }

    /**
     * Fetch records that have <code>lastname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfLastname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.LASTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastname IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByLastname(String... values) {
        return fetch(Person.PERSON.LASTNAME, values);
    }

    /**
     * Fetch records that have <code>birthname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfBirthname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.BIRTHNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>birthname IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByBirthname(String... values) {
        return fetch(Person.PERSON.BIRTHNAME, values);
    }

    /**
     * Fetch records that have <code>administrativegender BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfAdministrativegender(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.ADMINISTRATIVEGENDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>administrativegender IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByAdministrativegender(String... values) {
        return fetch(Person.PERSON.ADMINISTRATIVEGENDER, values);
    }

    /**
     * Fetch records that have <code>dateofbirth BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfDateofbirth(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Person.PERSON.DATEOFBIRTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateofbirth IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByDateofbirth(LocalDate... values) {
        return fetch(Person.PERSON.DATEOFBIRTH, values);
    }

    /**
     * Fetch records that have <code>street BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfStreet(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.STREET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>street IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByStreet(String... values) {
        return fetch(Person.PERSON.STREET, values);
    }

    /**
     * Fetch records that have <code>postalcode BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfPostalcode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.POSTALCODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>postalcode IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByPostalcode(String... values) {
        return fetch(Person.PERSON.POSTALCODE, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByCity(String... values) {
        return fetch(Person.PERSON.CITY, values);
    }

    /**
     * Fetch records that have <code>country BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfCountry(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.COUNTRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByCountry(String... values) {
        return fetch(Person.PERSON.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>identifier BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfIdentifier(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.IDENTIFIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>identifier IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByIdentifier(String... values) {
        return fetch(Person.PERSON.IDENTIFIER, values);
    }

    /**
     * Fetch records that have <code>idtype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfIdtype(String lowerInclusive, String upperInclusive) {
        return fetchRange(Person.PERSON.IDTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>idtype IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByIdtype(String... values) {
        return fetch(Person.PERSON.IDTYPE, values);
    }

    /**
     * Fetch records that have <code>identifieralgorithm BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchRangeOfIdentifieralgorithm(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Person.PERSON.IDENTIFIERALGORITHM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>identifieralgorithm IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Person> fetchByIdentifieralgorithm(Integer... values) {
        return fetch(Person.PERSON.IDENTIFIERALGORITHM, values);
    }
}
