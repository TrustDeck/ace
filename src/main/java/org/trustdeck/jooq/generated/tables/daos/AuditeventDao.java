/*
 * This file is generated by jOOQ.
 */
package org.trustdeck.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.trustdeck.jooq.generated.tables.Auditevent;
import org.trustdeck.jooq.generated.tables.records.AuditeventRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AuditeventDao extends DAOImpl<AuditeventRecord, org.trustdeck.jooq.generated.tables.pojos.Auditevent, Long> {

    /**
     * Create a new AuditeventDao without any configuration
     */
    public AuditeventDao() {
        super(Auditevent.AUDITEVENT, org.trustdeck.jooq.generated.tables.pojos.Auditevent.class);
    }

    /**
     * Create a new AuditeventDao with an attached configuration
     */
    public AuditeventDao(Configuration configuration) {
        super(Auditevent.AUDITEVENT, org.trustdeck.jooq.generated.tables.pojos.Auditevent.class, configuration);
    }

    @Override
    public Long getId(org.trustdeck.jooq.generated.tables.pojos.Auditevent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Auditevent.AUDITEVENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchById(Long... values) {
        return fetch(Auditevent.AUDITEVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.trustdeck.jooq.generated.tables.pojos.Auditevent fetchOneById(Long value) {
        return fetchOne(Auditevent.AUDITEVENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchOptionalById(Long value) {
        return fetchOptional(Auditevent.AUDITEVENT.ID, value);
    }

    /**
     * Fetch records that have <code>requesttime BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchRangeOfRequesttime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Auditevent.AUDITEVENT.REQUESTTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>requesttime IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchByRequesttime(LocalDateTime... values) {
        return fetch(Auditevent.AUDITEVENT.REQUESTTIME, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Auditevent.AUDITEVENT.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchByUsername(String... values) {
        return fetch(Auditevent.AUDITEVENT.USERNAME, values);
    }

    /**
     * Fetch records that have <code>requesterip BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchRangeOfRequesterip(String lowerInclusive, String upperInclusive) {
        return fetchRange(Auditevent.AUDITEVENT.REQUESTERIP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>requesterip IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchByRequesterip(String... values) {
        return fetch(Auditevent.AUDITEVENT.REQUESTERIP, values);
    }

    /**
     * Fetch records that have <code>requesturl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchRangeOfRequesturl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Auditevent.AUDITEVENT.REQUESTURL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>requesturl IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchByRequesturl(String... values) {
        return fetch(Auditevent.AUDITEVENT.REQUESTURL, values);
    }

    /**
     * Fetch records that have <code>requestbody BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchRangeOfRequestbody(String lowerInclusive, String upperInclusive) {
        return fetchRange(Auditevent.AUDITEVENT.REQUESTBODY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>requestbody IN (values)</code>
     */
    public List<org.trustdeck.jooq.generated.tables.pojos.Auditevent> fetchByRequestbody(String... values) {
        return fetch(Auditevent.AUDITEVENT.REQUESTBODY, values);
    }
}
