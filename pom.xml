<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <keycloak.version>23.0.5</keycloak.version>
        <disruptor.version>3.4.4</disruptor.version>
        <blake3.version>0.2.2</blake3.version>
        <lz4.version>1.8.0</lz4.version>
        <jooq.version>3.18.9</jooq.version> <!-- This has to be the same version that the spring-boot-starter-jooq uses. -->
        <springdoc.version>2.6.0</springdoc.version>
        <jar.finalName>ace</jar.finalName>
        <jooq.skip>false</jooq.skip>
    </properties>

    <groupId>org.trustdeck</groupId>
    <artifactId>ace</artifactId>
    <version>v1.0.2</version>
    <packaging>jar</packaging>
    <name>ace</name>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.0</version>
        <relativePath/> <!-- Lookup parent from repository. -->
    </parent>

    <dependencies>
        <!-- SpringBoot dependencies -->
        <!-- Versions of all org.springframework.boot dependencies are managed by the global version of spring boot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>

        <!-- Other dependencies -->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-boot-starter</artifactId>
            <version>${keycloak.version}</version><!--$NO-MVN-MAN-VER$-->
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- PostgreSQL JDBC driver. -->
        <!-- License: BSD-2-Clause License (compatible with Apache 2.0; https://joinup.ec.europa.eu/licence/compatibility-check/BSD-2-Clause/Apache-2.0) -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <!-- Needed for asynchronous logging. -->
            <!-- License: Apache 2.0 -->
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${disruptor.version}</version>
        </dependency>
        <dependency>
            <!-- Used to reduce boilerplate code. -->
            <!-- License: MIT License (compatible with Apache 2.0; https://joinup.ec.europa.eu/licence/compatibility-check/MIT/Apache-2.0) -->
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Provides functionality to work with hashes. -->
            <!-- License: Apache 2.0 -->
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <!-- Provides the BLAKE3 hash function. -->
            <!-- License: Apache 2.0 -->
            <groupId>io.lktk</groupId>
            <artifactId>blake3jni</artifactId>
            <version>${blake3.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-nop</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- Provides a xxHash implementation as well as a JNI. -->
            <!-- License: Apache 2.0 -->
            <groupId>org.lz4</groupId>
            <artifactId>lz4-java</artifactId>
            <version>${lz4.version}</version>
        </dependency>
		<dependency>
			<!-- Needed for caching functionalities. -->
			<!-- License: Apache 2.0 -->
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-spring</artifactId>
        </dependency>
        <dependency>
			<!-- Needed for user information retrieval. -->
			<!-- License: Apache 2.0 -->
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-admin-client</artifactId>
            <version>${keycloak.version}</version>
        </dependency>
        <dependency>
        	<!-- Needed for Swagger. -->
        	<!-- License: Apache 2.0 -->
	        <groupId>org.springdoc</groupId>
	        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
	        <version>${springdoc.version}</version>
	    </dependency>

        <!-- Dependencies for tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.keycloak.bom</groupId>
                <artifactId>keycloak-adapter-bom</artifactId>
                <version>${keycloak.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version><!--$NO-MVN-MAN-VER$-->
                <!--
                    plugin must have the same version as in spring-boot-starter-jooq is defnied
                    otherwhise this would fail with some class error
                -->
                <executions>
                    <execution>
                        <id>jooq-codegen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${jooq.skip}</skip>
                    <logging>WARN</logging>
                    <jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>jdbc:postgresql://localhost:5432/ace</url>
                        <user>${env.DATABASE_ACE_USER}</user>
                        <password>${env.DATABASE_ACE_PASSWORD}</password>
                    </jdbc>
                    <generator>
                        <strategy>
                            <name>org.jooq.codegen.DefaultGeneratorStrategy</name>
                        </strategy>
                        <database>
                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                            <includes>.*</includes>
                            <excludes></excludes>
                            <inputSchema>public</inputSchema>
                        </database>
                        <target>
                            <packageName>org.trustdeck.ace.jooq.generated</packageName>
                            <directory>src/main/java</directory>
                        </target>
                        <generate>
                            <sources>true</sources>
                            <sourcesOnViews>true</sourcesOnViews>
                            <relations>true</relations>
                            <deprecated>false</deprecated>
                            <instanceFields>true</instanceFields>
                            <records>true</records>
                            <pojos>true</pojos>
                            <pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
                            <immutablePojos>false</immutablePojos>
                            <interfaces>true</interfaces>
                            <daos>true</daos>
                            <jpaAnnotations>true</jpaAnnotations>
                            <validationAnnotations>true</validationAnnotations>
                            <globalObjectReferences>true</globalObjectReferences>
                            <fluentSetters>true</fluentSetters>
                            <javaTimeTypes>true</javaTimeTypes>
                            <generatedAnnotation>false</generatedAnnotation>
                        </generate>
                    </generator>

                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>
                        --add-modules java.se
                        --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        --add-opens java.base/sun.nio.ch=ALL-UNNAMED
                        --add-opens java.management/sun.management=ALL-UNNAMED
                        --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
                    </jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <finalName>ace-${project.version}</finalName>
                            <executable>true</executable>
                            <mainClass>org.trustdeck.ace.Application</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- used by junit test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>
                        --add-modules java.se
                        --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        --add-opens java.base/sun.nio.ch=ALL-UNNAMED
                        --add-opens java.management/sun.management=ALL-UNNAMED
                        --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
